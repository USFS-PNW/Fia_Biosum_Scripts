# These queries on NIMS_FIRE_2022 will build views that make the data more approachable, I think.

# They depend only on the tables in the NIMS_FIRE_2022 database (remember, we established links to these tables in 
# a new database that contains mainly queries (dynamic views) which we use to stitch together data to feed to R)
# plus the FullPlotList table that was in a separate temp database and contained the pre and post plot_cn values 
# for the 262 wFERS plots. Don't rely on other columns in FullPlotList-- just the plot cns
# I added 1 to a few columns at the end of each of these views that may be useful in linking across time or data type.


V1PLOT
SELECT NIMS_PLOT.*, FullPlotList.POSTFIRE_PLT_CN AS V2PLTCN, ANL_FIRE_STUDY_PLOT.FIRE_NAME, ANL_FIRE_STUDY_PLOT.FIRE_YEAR, ANL_FIRE_STUDY_PLOT.FIRE_GROUND_PLOT, ANL_FIRE_STUDY_PLOT.MISSING_FIRE_DATA_REASON
FROM (FullPlotList INNER JOIN ANL_FIRE_STUDY_PLOT ON FullPlotList.POSTFIRE_PLT_CN = ANL_FIRE_STUDY_PLOT.PLT_CN) INNER JOIN NIMS_PLOT ON FullPlotList.PREFIRE_PLT_CN = NIMS_PLOT.CN;

V2PLOT
SELECT NIMS_PLOT.*, FullPlotList.PREFIRE_PLT_CN AS V1PLTCN, ANL_FIRE_STUDY_PLOT.FIRE_NAME, ANL_FIRE_STUDY_PLOT.FIRE_YEAR, ANL_FIRE_STUDY_PLOT.FIRE_GROUND_PLOT, ANL_FIRE_STUDY_PLOT.MISSING_FIRE_DATA_REASON
FROM (FullPlotList INNER JOIN NIMS_PLOT ON FullPlotList.POSTFIRE_PLT_CN = NIMS_PLOT.CN) INNER JOIN ANL_FIRE_STUDY_PLOT ON FullPlotList.POSTFIRE_PLT_CN = ANL_FIRE_STUDY_PLOT.PLT_CN;

V1COND
SELECT NIMS_COND.*, FullPlotList.POSTFIRE_PLT_CN AS V2PLTCN, ANL_FIRE_STUDY_PLOT.FIRE_NAME, ANL_FIRE_STUDY_PLOT.FIRE_YEAR, ANL_FIRE_STUDY_PLOT.FIRE_GROUND_PLOT, ANL_FIRE_STUDY_PLOT.MISSING_FIRE_DATA_REASON
FROM ((FullPlotList INNER JOIN ANL_FIRE_STUDY_PLOT ON FullPlotList.POSTFIRE_PLT_CN = ANL_FIRE_STUDY_PLOT.PLT_CN) INNER JOIN NIMS_PLOT ON FullPlotList.PREFIRE_PLT_CN = NIMS_PLOT.CN) INNER JOIN NIMS_COND ON NIMS_PLOT.CN = NIMS_COND.PLT_CN;

V2COND
SELECT NIMS_COND.*, FullPlotList.PREFIRE_PLT_CN AS V1PLTCN, ANL_FIRE_STUDY_PLOT.FIRE_NAME, ANL_FIRE_STUDY_PLOT.FIRE_YEAR, ANL_FIRE_STUDY_PLOT.FIRE_GROUND_PLOT, ANL_FIRE_STUDY_PLOT.MISSING_FIRE_DATA_REASON
FROM (FullPlotList INNER JOIN ANL_FIRE_STUDY_PLOT ON FullPlotList.POSTFIRE_PLT_CN = ANL_FIRE_STUDY_PLOT.PLT_CN) INNER JOIN (NIMS_PLOT INNER JOIN NIMS_COND ON NIMS_PLOT.CN = NIMS_COND.PLT_CN) ON FullPlotList.POSTFIRE_PLT_CN = NIMS_PLOT.CN;

V1TREE
SELECT NIMS_TREE.*, FullPlotList.POSTFIRE_PLT_CN AS V2PLTCN
FROM (FullPlotList INNER JOIN NIMS_PLOT ON FullPlotList.PREFIRE_PLT_CN = NIMS_PLOT.CN) INNER JOIN NIMS_TREE ON NIMS_PLOT.CN = NIMS_TREE.PLT_CN;

V2TREE
SELECT NIMS_TREE.*, FullPlotList.PREFIRE_PLT_CN AS V1PLTCN
FROM FullPlotList INNER JOIN (NIMS_PLOT INNER JOIN NIMS_TREE ON NIMS_PLOT.CN = NIMS_TREE.PLT_CN) ON FullPlotList.POSTFIRE_PLT_CN = NIMS_PLOT.CN;

# This next one provides links for each tree that exists as a record in NIMS_TREE at both time 1 (pre-fire) and time 2
# (post-fire) including, for tree, cond and plot. It will be frequently used when linking up data throughout our analysis
# but keep in mind that it only includes trees that are present at both visits (so no ingrowth, for example, which will need
# to be accounted for in some analyses down the line, but not in our rapid wFERS analysis that we are doing in spring 2022)

TREE_CN_LINK
SELECT V1TREE.CN AS V1TRECN, V2TREE.CN AS V2TRECN, V1COND.CN AS V1CNDCN, V2COND.CN AS V2CNDCN, FullPlotList.PREFIRE_PLT_CN AS V1PLTCN, FullPlotList.POSTFIRE_PLT_CN AS V2PLTCN
FROM (((FullPlotList INNER JOIN V1TREE ON FullPlotList.PREFIRE_PLT_CN = V1TREE.PLT_CN) INNER JOIN V2TREE ON (V1TREE.TREE = V2TREE.TREE) AND (V1TREE.SUBP = V2TREE.SUBP) AND (V1TREE.COUNTYCD = V2TREE.COUNTYCD) AND (V1TREE.PLOT = V2TREE.PLOT) AND (V1TREE.STATECD = V2TREE.STATECD) AND (FullPlotList.POSTFIRE_PLT_CN = V2TREE.PLT_CN)) INNER JOIN V1COND ON (V1TREE.CONDID = V1COND.CONDID) AND (FullPlotList.PREFIRE_PLT_CN = V1COND.PLT_CN)) INNER JOIN V2COND ON (V2TREE.CONDID = V2COND.CONDID) AND (FullPlotList.POSTFIRE_PLT_CN = V2COND.PLT_CN);

# So with these precursors, one can start building the custom AllTrees table of your dreams that will contain whatever 
# attributes you need from pre and post tree tables, cond tables, etc. Just for fun, I brought in some condition 
# attributes also (treatment codes, so that you could see the values of 18 in treatment code that signify fire salvage).


NewerAllTreeBeginnings
SELECT ANL_FIRE_STUDY_PLOT.FIRE_NAME, TREE_CN_LINK.V1CNDCN, ANL_FIRE_STUDY_PLOT.STATECD, ANL_FIRE_STUDY_PLOT.COUNTYCD, ANL_FIRE_STUDY_PLOT.PLOT, V1TREE.SUBP, V1TREE.TREE, V1TREE.CONDID, V1TREE.STATUSCD, V2TREE.STATUSCD, NIMS_FIRE_TREE.PRE_FIRE_TREE_STATUS, NIMS_FIRE_TREE.FIRE_EFFECTS_CAUSE_OF_DEATH, NIMS_FIRE_TREE.POST_FIRE_TREE_STATUS, V1TREE.DIA, V2TREE.DIA, V1TREE.DRYBIO_AG, V2COND.TRTCD1_PNWRS, V2COND.TRTCD2_PNWRS, V2COND.TRTCD3_PNWRS, V2COND.TRTYR1_PNWRS, V2COND.TRTYR2_PNWRS, V2COND.TRTYR3_PNWRS
FROM ((((TREE_CN_LINK INNER JOIN V1TREE ON TREE_CN_LINK.V1TRECN = V1TREE.CN) INNER JOIN V2TREE ON TREE_CN_LINK.V2TRECN = V2TREE.CN) INNER JOIN ANL_FIRE_STUDY_PLOT ON TREE_CN_LINK.V2PLTCN = ANL_FIRE_STUDY_PLOT.PLT_CN) INNER JOIN NIMS_FIRE_TREE ON TREE_CN_LINK.V2TRECN = NIMS_FIRE_TREE.TRE_CN) INNER JOIN V2COND ON TREE_CN_LINK.V2CNDCN = V2COND.CN;


